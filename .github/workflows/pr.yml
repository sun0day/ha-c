name: PR Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  INSTALL_PREFIX: /usr
  BUILD_TYPE: Release

jobs:
  build_test_on_windows:
    permissions:
      contents: write
    strategy:
      matrix:
        arch: [x64, arm64]
        c_compiler: [cl]

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup MSVC ARM64 Toolchain
      if: ${{ matrix.arch == 'arm64' }}
      shell: cmd
      run: |
        call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsamd64_arm64.bat"
        set >> %GITHUB_ENV%

    - name: Configure CMake 
      shell: bash
      run: |
        mkdir build
        cd build
        cmake .. \
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
        -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.arch }} \
        -A ${{ matrix.arch }}
    
    - name: Build library
      shell: bash
      run: cmake --build ./build --config $BUILD_TYPE

    - name: Test library 
      if: ${{ matrix.arch == 'x64' }}
      shell: bash
      run: ./build/test/Release/test.exe

    - name: Verify library on arm64
      if: ${{ matrix.arch == 'arm64' }}
      shell: cmd
      run: dumpbin /headers build\test\Release\test.exe | findstr "machine"

  build_test_on_ubuntu:
    permissions:
      contents: write
    strategy:
      matrix:
        arch: [x86_64, arm64, armv7]
        c_compiler: [gcc, clang, arm-linux-gnueabihf-gcc]
        exclude:
        - arch: armv7
          c_compiler: gcc
        - arch: armv7
          c_compiler: clang
        - arch: x86_64
          c_compiler: arm-linux-gnueabihf-gcc
        - arch: arm64
          c_compiler: arm-linux-gnueabihf-gcc

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install ARM Toolchain
      if: ${{ matrix.arch == 'armv7' }}
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-linux-gnueabihf qemu-user-static

    - name: Configure CMake 
      shell: bash
      run: |
        mkdir build
        cd build
        cmake .. \
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
        -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.arch }}
    
    - name: Build library
      shell: bash
      run: cmake --build ./build --config $BUILD_TYPE

    - name: Test library 
      shell: bash
      run: ./build/test/test

    - name: Test installation
      if: ${{ matrix.arch != 'armv7' }}
      run: sudo cmake --install ./build

  build_test_on_macos:
    permissions:
      contents: write
    strategy:
      matrix:
        arch: [x86_64, arm64]
        c_compiler: [gcc, clang]

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake 
      shell: bash
      run: |
        mkdir build
        cd build
        cmake .. \
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
        -DCMAKE_BUILD_TYPE=$BUILD_TYPE \
        -DCMAKE_SYSTEM_PROCESSOR=${{ matrix.arch }}
    
    - name: Build library
      shell: bash
      run: cmake --build ./build --config $BUILD_TYPE

    - name: Test library 
      shell: bash
      run: ./build/test/test